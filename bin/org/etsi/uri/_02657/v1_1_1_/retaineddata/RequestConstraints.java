//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.04.14 at 10:55:58 AM BST 
//


package org.etsi.uri._02657.v1_1_1_.retaineddata;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RequestConstraints complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RequestConstraints">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="equals" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="notEqualTo" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="lessThan" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="lessThanOrEqualTo" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="greaterThan" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="greaterThanOrEqualTo" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="startsWith" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="endsWith" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord" minOccurs="0"/>
 *         &lt;element name="isAMemberOf" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *                   &lt;element name="RetainedDataRecord" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RequestConstraints", propOrder = {
    "equals",
    "notEqualTo",
    "lessThan",
    "lessThanOrEqualTo",
    "greaterThan",
    "greaterThanOrEqualTo",
    "startsWith",
    "endsWith",
    "isAMemberOf"
})
public class RequestConstraints {

    protected RetainedDataRecord equals;
    protected RetainedDataRecord notEqualTo;
    protected RetainedDataRecord lessThan;
    protected RetainedDataRecord lessThanOrEqualTo;
    protected RetainedDataRecord greaterThan;
    protected RetainedDataRecord greaterThanOrEqualTo;
    protected RetainedDataRecord startsWith;
    protected RetainedDataRecord endsWith;
    protected RequestConstraints.IsAMemberOf isAMemberOf;

    /**
     * Gets the value of the equals property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getEquals() {
        return equals;
    }

    /**
     * Sets the value of the equals property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setEquals(RetainedDataRecord value) {
        this.equals = value;
    }

    /**
     * Gets the value of the notEqualTo property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getNotEqualTo() {
        return notEqualTo;
    }

    /**
     * Sets the value of the notEqualTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setNotEqualTo(RetainedDataRecord value) {
        this.notEqualTo = value;
    }

    /**
     * Gets the value of the lessThan property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getLessThan() {
        return lessThan;
    }

    /**
     * Sets the value of the lessThan property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setLessThan(RetainedDataRecord value) {
        this.lessThan = value;
    }

    /**
     * Gets the value of the lessThanOrEqualTo property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getLessThanOrEqualTo() {
        return lessThanOrEqualTo;
    }

    /**
     * Sets the value of the lessThanOrEqualTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setLessThanOrEqualTo(RetainedDataRecord value) {
        this.lessThanOrEqualTo = value;
    }

    /**
     * Gets the value of the greaterThan property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getGreaterThan() {
        return greaterThan;
    }

    /**
     * Sets the value of the greaterThan property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setGreaterThan(RetainedDataRecord value) {
        this.greaterThan = value;
    }

    /**
     * Gets the value of the greaterThanOrEqualTo property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getGreaterThanOrEqualTo() {
        return greaterThanOrEqualTo;
    }

    /**
     * Sets the value of the greaterThanOrEqualTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setGreaterThanOrEqualTo(RetainedDataRecord value) {
        this.greaterThanOrEqualTo = value;
    }

    /**
     * Gets the value of the startsWith property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getStartsWith() {
        return startsWith;
    }

    /**
     * Sets the value of the startsWith property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setStartsWith(RetainedDataRecord value) {
        this.startsWith = value;
    }

    /**
     * Gets the value of the endsWith property.
     * 
     * @return
     *     possible object is
     *     {@link RetainedDataRecord }
     *     
     */
    public RetainedDataRecord getEndsWith() {
        return endsWith;
    }

    /**
     * Sets the value of the endsWith property.
     * 
     * @param value
     *     allowed object is
     *     {@link RetainedDataRecord }
     *     
     */
    public void setEndsWith(RetainedDataRecord value) {
        this.endsWith = value;
    }

    /**
     * Gets the value of the isAMemberOf property.
     * 
     * @return
     *     possible object is
     *     {@link RequestConstraints.IsAMemberOf }
     *     
     */
    public RequestConstraints.IsAMemberOf getIsAMemberOf() {
        return isAMemberOf;
    }

    /**
     * Sets the value of the isAMemberOf property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestConstraints.IsAMemberOf }
     *     
     */
    public void setIsAMemberOf(RequestConstraints.IsAMemberOf value) {
        this.isAMemberOf = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence maxOccurs="unbounded" minOccurs="0">
     *         &lt;element name="RetainedDataRecord" type="{http://uri.etsi.org/02657/v1.1.1#/RetainedData}RetainedDataRecord"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "retainedDataRecord"
    })
    public static class IsAMemberOf {

        @XmlElement(name = "RetainedDataRecord")
        protected List<RetainedDataRecord> retainedDataRecord;

        /**
         * Gets the value of the retainedDataRecord property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the retainedDataRecord property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRetainedDataRecord().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link RetainedDataRecord }
         * 
         * 
         */
        public List<RetainedDataRecord> getRetainedDataRecord() {
            if (retainedDataRecord == null) {
                retainedDataRecord = new ArrayList<RetainedDataRecord>();
            }
            return this.retainedDataRecord;
        }

    }

}
